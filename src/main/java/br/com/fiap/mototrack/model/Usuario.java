package br.com.fiap.mototrack.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.*;

/**
 * üë§ Entidade: Usuario
 *
 * Representa um usu√°rio do sistema com credenciais de acesso e perfil funcional.
 * Pode ter papel de OPERADOR, GESTOR ou ADMINISTRADOR.
 *
 * ---
 * @author Rafael
 * @version 1.0
 */
@Entity
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "tb_usuario")
public class Usuario {

    // ===========================
    // üîë Identifica√ß√£o
    // ===========================

    /**
     * Identificador √∫nico do usu√°rio.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id_usuario")
    private Long id;

    // ===========================
    // üßë Dados pessoais
    // ===========================

    /**
     * Nome completo do usu√°rio.
     */
    @NotBlank(message = "O nome √© obrigat√≥rio.")
    @Column(name = "nm_usuario", nullable = false)
    private String nome;

    /**
     * Email do usu√°rio, usado para login. Deve ser √∫nico.
     */
    @Email(message = "Email inv√°lido.")
    @NotBlank(message = "O email √© obrigat√≥rio.")
    @Column(name = "ds_email", nullable = false, unique = true)
    private String email;

    /**
     * Senha de acesso ao sistema. Deve ser armazenada criptografada.
     */
    @NotBlank(message = "A senha √© obrigat√≥ria.")
    @Column(name = "ds_senha", nullable = false)
    private String senha;

    /**
     * Perfil do usu√°rio (ex: OPERADOR, GESTOR, ADMINISTRADOR).
     */
    @NotBlank(message = "O perfil √© obrigat√≥rio.")
    @Column(name = "tp_perfil", nullable = false)
    private String perfil;

    // ===========================
    // üîó Relacionamento
    // ===========================

    /**
     * Filial vinculada ao usu√°rio.
     * Representa a FK ID_FILIAL no banco.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_filial") // nome exato da coluna FK
    private Filial filial;

}
